// Generated by CoffeeScript 1.3.1
(function() {
  var Stat, fs, noflo,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor; child.__super__ = parent.prototype; return child; };

  fs = require("fs");

  noflo = require("noflo");

  Stat = (function(_super) {

    __extends(Stat, _super);

    Stat.name = 'Stat';

    function Stat() {
      var _this = this;
      this.inPorts = {
        "in": new noflo.Port()
      };
      this.outPorts = {
        out: new noflo.Port(),
        error: new noflo.Port()
      };
      this.inPorts["in"].on("data", function(data) {
        return _this.stat(data);
      });
    }

    Stat.prototype.stat = function(path) {
      var _this = this;
      return fs.stat(path, function(err, stats) {
        var func, _i, _len, _ref;
        if (err) {
          _this.outPorts.error.send(err);
          return _this.outPorts.error.disconnect();
        }
        stats.path = path;
        _ref = ["isFile", "isDirectory", "isBlockDevice", "isCharacterDevice", "isFIFO", "isSocket"];
        for (_i = 0, _len = _ref.length; _i < _len; _i++) {
          func = _ref[_i];
          stats[func] = stats[func]();
        }
        return _this.outPorts.out.send(stats);
      });
    };

    return Stat;

  })(noflo.Component);

  exports.getComponent = function() {
    return new Stat();
  };

}).call(this);
