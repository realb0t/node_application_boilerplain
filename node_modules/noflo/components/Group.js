// Generated by CoffeeScript 1.3.1
(function() {
  var Group, noflo,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor; child.__super__ = parent.prototype; return child; };

  noflo = require('noflo');

  Group = (function(_super) {

    __extends(Group, _super);

    Group.name = 'Group';

    function Group() {
      var groups,
        _this = this;
      groups = [];
      this.inPorts = {
        "in": new noflo.ArrayPort,
        group: new noflo.ArrayPort
      };
      this.outPorts = {
        out: new noflo.Port
      };
      this.inPorts["in"].on('data', function(data) {
        var group, _i, _j, _len, _len1, _results;
        for (_i = 0, _len = groups.length; _i < _len; _i++) {
          group = groups[_i];
          _this.outPorts.out.beginGroup(group);
        }
        _this.outPorts.out.send(data);
        _results = [];
        for (_j = 0, _len1 = groups.length; _j < _len1; _j++) {
          group = groups[_j];
          _results.push(_this.outPorts.out.endGroup);
        }
        return _results;
      });
      this.inPorts.group.on('data', function(data) {
        return groups.push(data);
      });
    }

    return Group;

  })(noflo.Component);

  exports.getComponent = function() {
    return new Group;
  };

}).call(this);
