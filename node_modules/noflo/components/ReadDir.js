// Generated by CoffeeScript 1.3.1
(function() {
  var ReadDir, fs, noflo,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor; child.__super__ = parent.prototype; return child; };

  fs = require("fs");

  noflo = require("noflo");

  ReadDir = (function(_super) {

    __extends(ReadDir, _super);

    ReadDir.name = 'ReadDir';

    function ReadDir() {
      var _this = this;
      this.inPorts = {
        source: new noflo.Port()
      };
      this.outPorts = {
        out: new noflo.Port(),
        error: new noflo.Port()
      };
      this.inPorts.source.on("data", function(data) {
        return _this.readdir(data);
      });
    }

    ReadDir.prototype.readdir = function(path) {
      var _this = this;
      return fs.readdir(path, function(err, files) {
        var f, _i, _len, _results;
        if (err) {
          _this.outPorts.error.send(err);
          return _this.outPorts.error.disconnect();
        }
        if (path.slice(-1) === "/") {
          path = path.slice(0, -1);
        }
        _results = [];
        for (_i = 0, _len = files.length; _i < _len; _i++) {
          f = files[_i];
          _results.push(_this.outPorts.out.send("" + path + "/" + f));
        }
        return _results;
      });
    };

    return ReadDir;

  })(noflo.Component);

  exports.getComponent = function() {
    return new ReadDir();
  };

}).call(this);
