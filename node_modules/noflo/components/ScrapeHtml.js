// Generated by CoffeeScript 1.3.1
(function() {
  var ScrapeHtml, jsdom, noflo,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor; child.__super__ = parent.prototype; return child; };

  noflo = require("noflo");

  jsdom = require("jsdom");

  ScrapeHtml = (function(_super) {

    __extends(ScrapeHtml, _super);

    ScrapeHtml.name = 'ScrapeHtml';

    function ScrapeHtml() {
      var html,
        _this = this;
      this.html = [];
      this.textSelector = "";
      this.ignoreSelectors = [];
      this.inPorts = {
        "in": new noflo.Port(),
        textSelector: new noflo.Port(),
        ignoreSelector: new noflo.ArrayPort()
      };
      this.outPorts = {
        out: new noflo.Port(),
        error: new noflo.Port()
      };
      html = "";
      this.inPorts["in"].on("connect", function() {
        return _this.html = [];
      });
      this.inPorts["in"].on("begingroup", function(group) {
        return _this.outPorts.out.beginGroup(group);
      });
      this.inPorts["in"].on("data", function(data) {
        return html += data;
      });
      this.inPorts["in"].on("endgroup", function() {
        _this.once("scraped", function() {
          return _this.outPorts.out.endGroup();
        });
        _this.html.push(html);
        html = "";
        return _this.scrapeHtml();
      });
      this.inPorts["in"].on("disconnect", function() {
        _this.once("scraped", function() {
          return _this.outPorts.out.disconnect();
        });
        if (_this.html.length > 0) {
          return;
        }
        _this.html.push(html);
        html = "";
        return _this.scrapeHtml();
      });
      this.inPorts.textSelector.on("data", function(data) {
        return _this.textSelector = data;
      });
      this.inPorts.textSelector.on("disconnect", function() {
        return _this.scrapeHtml();
      });
      this.inPorts.ignoreSelector.on("data", function(data) {
        return _this.ignoreSelectors.push(data);
      });
    }

    ScrapeHtml.prototype.scrapeHtml = function() {
      var h, _i, _len, _ref, _results,
        _this = this;
      if (!(this.html.length > 0)) {
        return;
      }
      if (!(this.textSelector.length > 0)) {
        return;
      }
      _ref = this.html;
      _results = [];
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        h = _ref[_i];
        _results.push(jsdom.env(h, ['http://code.jquery.com/jquery.min.js'], function(err, win) {
          var ignore, _j, _len1, _ref1;
          if (err) {
            _this.outPorts.error.send(err);
            return _this.outPorts.error.disconnect();
          }
          _ref1 = _this.ignoreSelectors;
          for (_j = 0, _len1 = _ref1.length; _j < _len1; _j++) {
            ignore = _ref1[_j];
            win.$(ignore).remove();
          }
          win.$(_this.textSelector).map(function(i, e) {
            if (e.hasAttribute("id")) {
              _this.outPorts.out.beginGroup(e.id);
            }
            _this.outPorts.out.send(win.$(e).text());
            if (e.hasAttribute("id")) {
              return _this.outPorts.out.endGroup();
            }
          });
          return _this.emit("scraped");
        }));
      }
      return _results;
    };

    return ScrapeHtml;

  })(noflo.Component);

  exports.getComponent = function() {
    return new ScrapeHtml;
  };

}).call(this);
