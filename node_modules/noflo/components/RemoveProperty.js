// Generated by CoffeeScript 1.3.1
(function() {
  var RemoveProperty, noflo,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor; child.__super__ = parent.prototype; return child; };

  noflo = require("noflo");

  RemoveProperty = (function(_super) {

    __extends(RemoveProperty, _super);

    RemoveProperty.name = 'RemoveProperty';

    function RemoveProperty() {
      var _this = this;
      this.properties = [];
      this.inPorts = {
        "in": new noflo.Port(),
        property: new noflo.ArrayPort()
      };
      this.outPorts = {
        out: new noflo.Port()
      };
      this.inPorts.property.on("data", function(data) {
        return _this.properties.push(data);
      });
      this.inPorts["in"].on("begingroup", function(group) {
        return _this.outPorts.out.beginGroup(group);
      });
      this.inPorts["in"].on("data", function(data) {
        return _this.outPorts.out.send(_this.removeProperties(data));
      });
      this.inPorts["in"].on("endgroup", function() {
        return _this.outPorts.out.endGroup();
      });
      this.inPorts["in"].on("disconnect", function() {
        return _this.outPorts.out.disconnect();
      });
    }

    RemoveProperty.prototype.removeProperties = function(object) {
      var property, _i, _len, _ref;
      _ref = this.properties;
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        property = _ref[_i];
        delete object[property];
      }
      return object;
    };

    return RemoveProperty;

  })(noflo.Component);

  exports.getComponent = function() {
    return new RemoveProperty;
  };

}).call(this);
