// Generated by CoffeeScript 1.3.1
(function() {
  var ReadGroup, noflo,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor; child.__super__ = parent.prototype; return child; };

  noflo = require('noflo');

  ReadGroup = (function(_super) {

    __extends(ReadGroup, _super);

    ReadGroup.name = 'ReadGroup';

    function ReadGroup() {
      var _this = this;
      this.groups = [];
      this.inPorts = {
        "in": new noflo.ArrayPort
      };
      this.outPorts = {
        out: new noflo.Port
      };
      this.inPorts["in"].on('begingroup', function(group) {
        return _this.groups.push(group);
      });
      this.inPorts["in"].on('data', function() {
        if (!_this.groups.length) {
          return;
        }
        return _this.outPorts.out.send(_this.groups.join(':'));
      });
      this.inPorts["in"].on('endgroup', function() {
        return _this.groups.pop();
      });
    }

    return ReadGroup;

  })(noflo.Component);

  exports.getComponent = function() {
    return new ReadGroup;
  };

}).call(this);
