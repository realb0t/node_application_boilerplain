// Generated by CoffeeScript 1.3.1
(function() {
  var GroupRouter, noflo,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor; child.__super__ = parent.prototype; return child; };

  noflo = require('noflo');

  GroupRouter = (function(_super) {

    __extends(GroupRouter, _super);

    GroupRouter.name = 'GroupRouter';

    function GroupRouter() {
      var _this = this;
      this.routes = [];
      this.groups = [];
      this.inPorts = {
        routes: new noflo.Port,
        "in": new noflo.ArrayPort
      };
      this.outPorts = {
        out: new noflo.ArrayPort,
        missed: new noflo.Port
      };
      this.inPorts.routes.on('data', function(data) {
        if (typeof data === 'string') {
          data = data.split(',');
        }
        return _this.routes = data;
      });
      this.inPorts["in"].on('begingroup', function(group) {
        return _this.groups.push(group);
      });
      this.inPorts["in"].on('data', function(data) {
        var selected;
        selected = _this.routes.indexOf(_this.groups.join(':'));
        if (selected === -1) {
          return _this.outPorts.missed.send(data);
        }
        return _this.outPorts.out.send(data, selected);
      });
      this.inPorts["in"].on('endgroup', function() {
        return _this.groups.pop();
      });
    }

    return GroupRouter;

  })(noflo.Component);

  exports.getComponent = function() {
    return new GroupRouter;
  };

}).call(this);
