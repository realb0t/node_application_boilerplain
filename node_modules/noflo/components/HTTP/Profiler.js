// Generated by CoffeeScript 1.3.1
(function() {
  var Profiler, connect, noflo,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor; child.__super__ = parent.prototype; return child; };

  noflo = require("noflo");

  connect = require("connect");

  Profiler = (function(_super) {

    __extends(Profiler, _super);

    Profiler.name = 'Profiler';

    Profiler.prototype.description = "This component receives a HTTP request (req, res) combination on on input, and runs the connect.profiler middleware for that";

    function Profiler() {
      var _this = this;
      this.request = null;
      this.inPorts = {
        "in": new noflo.Port()
      };
      this.outPorts = {
        out: new noflo.Port()
      };
      this.inPorts["in"].on("data", function(request) {
        return _this.request = request;
      });
      this.inPorts["in"].on("disconnect", function() {
        return connect.profiler()(_this.request.req, _this.request.res, function() {
          _this.outPorts.out.send(_this.request);
          _this.request = null;
          return _this.outPorts.out.disconnect();
        });
      });
    }

    return Profiler;

  })(noflo.Component);

  exports.getComponent = function() {
    return new Profiler();
  };

}).call(this);
