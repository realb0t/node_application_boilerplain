// Generated by CoffeeScript 1.3.1
(function() {
  var Base64Encode, noflo,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor; child.__super__ = parent.prototype; return child; };

  noflo = require("noflo");

  Base64Encode = (function(_super) {

    __extends(Base64Encode, _super);

    Base64Encode.name = 'Base64Encode';

    function Base64Encode() {
      var _this = this;
      this.data = null;
      this.encodedData = "";
      this.inPorts = {
        "in": new noflo.Port
      };
      this.outPorts = {
        out: new noflo.Port
      };
      this.inPorts["in"].on("connect", function() {
        return _this.data = "";
      });
      this.inPorts["in"].on("data", function(data) {
        if (data instanceof Buffer) {
          _this.encodedData += data.toString("base64");
          return;
        }
        return _this.data += data;
      });
      this.inPorts["in"].on("disconnect", function() {
        _this.outPorts.out.send(_this.encodeData());
        _this.outPorts.out.disconnect();
        _this.data = null;
        return _this.encodedData = "";
      });
    }

    Base64Encode.prototype.encodeData = function() {
      if (this.encodedData !== "") {
        return this.encodedData;
      }
      return new Buffer(this.data).toString("base64");
    };

    return Base64Encode;

  })(noflo.Component);

  exports.getComponent = function() {
    return new Base64Encode;
  };

}).call(this);
