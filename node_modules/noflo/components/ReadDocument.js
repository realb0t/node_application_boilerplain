// Generated by CoffeeScript 1.3.1
(function() {
  var ReadDocument, noflo, spawn,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor; child.__super__ = parent.prototype; return child; };

  noflo = require("noflo");

  spawn = require("child_process").spawn;

  ReadDocument = (function(_super) {

    __extends(ReadDocument, _super);

    ReadDocument.name = 'ReadDocument';

    function ReadDocument() {
      var _this = this;
      this.tika = "" + __dirname + "/tika-app.jar";
      this.inPorts = {
        source: new noflo.Port(),
        tika: new noflo.Port()
      };
      this.outPorts = {
        out: new noflo.Port(),
        error: new noflo.Port()
      };
      this.inPorts.source.on("data", function(data) {
        return _this.readFile(data);
      });
      this.inPorts.tika.on("data", function(data) {
        return _this.tika = data;
      });
    }

    ReadDocument.prototype.readFile = function(fileName) {
      var error, tika,
        _this = this;
      tika = spawn("java", ["-jar", this.tika, "-x", fileName]);
      error = "";
      tika.stdout.setEncoding("utf-8");
      tika.stdout.on("data", function(data) {
        return _this.outPorts.out.send(data);
      });
      tika.stderr.on("data", function(data) {
        return error += data;
      });
      return tika.on("exit", function(code) {
        if (code > 0) {
          _this.outPorts.error.send(error);
          return _this.outPorts.error.disconnect();
        }
        return _this.outPorts.out.disconnect();
      });
    };

    return ReadDocument;

  })(noflo.Component);

  exports.getComponent = function() {
    return new ReadDocument;
  };

}).call(this);
