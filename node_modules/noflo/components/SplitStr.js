// Generated by CoffeeScript 1.3.1
(function() {
  var SplitStr, noflo,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor; child.__super__ = parent.prototype; return child; };

  noflo = require("noflo");

  SplitStr = (function(_super) {

    __extends(SplitStr, _super);

    SplitStr.name = 'SplitStr';

    function SplitStr() {
      var _this = this;
      this.delimiterString = "\n";
      this.string = "";
      this.inPorts = {
        "in": new noflo.Port(),
        delimiter: new noflo.Port()
      };
      this.outPorts = {
        out: new noflo.Port()
      };
      this.inPorts.delimiter.on("data", function(data) {
        return _this.delimiterString = data;
      });
      this.inPorts["in"].on("data", function(data) {
        return _this.string += data;
      });
      this.inPorts["in"].on("disconnect", function(data) {
        _this.string.split(_this.delimiterString).forEach(function(line) {
          return _this.outPorts.out.send(line);
        });
        _this.outPorts.out.disconnect();
        return _this.string = "";
      });
    }

    return SplitStr;

  })(noflo.Component);

  exports.getComponent = function() {
    return new SplitStr();
  };

}).call(this);
