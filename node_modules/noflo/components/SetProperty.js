// Generated by CoffeeScript 1.3.1
(function() {
  var SetProperty, noflo,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor; child.__super__ = parent.prototype; return child; };

  noflo = require("noflo");

  SetProperty = (function(_super) {

    __extends(SetProperty, _super);

    SetProperty.name = 'SetProperty';

    function SetProperty() {
      var _this = this;
      this.properties = {};
      this.inPorts = {
        property: new noflo.ArrayPort(),
        "in": new noflo.Port()
      };
      this.outPorts = {
        out: new noflo.Port()
      };
      this.inPorts.property.on("data", function(data) {
        return _this.setProperty(data);
      });
      this.inPorts["in"].on("begingroup", function(group) {
        return _this.outPorts.out.beginGroup(group);
      });
      this.inPorts["in"].on("data", function(data) {
        return _this.addProperties(data);
      });
      this.inPorts["in"].on("endgroup", function() {
        return _this.outPorts.out.endGroup();
      });
      this.inPorts["in"].on("disconnect", function() {
        return _this.outPorts.out.disconnect();
      });
    }

    SetProperty.prototype.setProperty = function(prop) {
      var propParts;
      if (typeof prop === "object") {
        this.prop = prop;
        return;
      }
      propParts = prop.split("=");
      return this.properties[propParts[0]] = propParts[1];
    };

    SetProperty.prototype.addProperties = function(object) {
      var property, value, _ref;
      _ref = this.properties;
      for (property in _ref) {
        value = _ref[property];
        object[property] = value;
      }
      return this.outPorts.out.send(object);
    };

    return SetProperty;

  })(noflo.Component);

  exports.getComponent = function() {
    return new SetProperty;
  };

}).call(this);
